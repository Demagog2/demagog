# frozen_string_literal: true

require "ruby-progressbar"

namespace :migration do
  desc "Migrates government promise labels and urls"
  task promise_urls: :environment do
    migrate_promises(
      "sobotkova vlada",
      sobotkova_vlada_get_promise_source_pages,
      -> (page) { "https://www.vlada.cz/assets/media-centrum/dulezite-dokumenty/programove_prohlaseni_unor_2014.pdf#page=#{page}" },
      -> (page) { "Programové prohlášení vlády, únor 2014, str. #{page}" }
    )

    migrate_promises(
      "babisova vlada",
      druha_vlada_andreje_babise_get_promise_source_pages,
      -> (page) { "https://www.vlada.cz/assets/jednani-vlady/programove-prohlaseni/Programove-prohlaseni-vlady-cerven-2018.pdf#page=#{page + 4}" },
      -> (page) { "Programové prohlášení vlády, str. #{page}" }
    )
  end

  def migrate_promises(name, page_map, promise_source_url, promise_source_label)
    puts "Migrating #{name}"

    bar = ProgressBar.create(total: page_map.count)

    page_map.each do |(id, page)|
      Statement
        .find(id)
        .update!({
          promise_source_url: promise_source_url.call(page),
          promise_source_label: promise_source_label.call(page)
        })

      bar.increment
    rescue => error
      puts "Issue with statement: #{id}, Cause: #{error.message}"

      bar.increment
    end
  end

  def sobotkova_vlada_get_promise_source_pages
    {
      15038 => 5,
      15039 => 5,
      15040 => 5,
      15041 => 5,

      15043 => 5,
      15044 => 5,
      15045 => 6,
      15046 => 6,

      15048 => 25,
      15049 => 25,
      15050 => 26,
      15051 => 26,
      15052 => 11,
      15053 => 26,

      15055 => 11,
      15056 => 26,
      15057 => 27,
      15058 => 28,
      15059 => 28,

      15062 => 29,
      15063 => 29,
      15064 => 29,
      15065 => 29,
      15066 => 29,
      15067 => 29,
      15068 => 29,
      15069 => 29,
      15070 => 30,
      15071 => 30,
      15072 => 30,
      15073 => 30,
      15074 => 30,
      15075 => 30,
      15076 => 5,
      15077 => 8,

      15079 => 9,
      15080 => 14,
      15081 => 4,

      15083 => 48,
      15084 => 48,
      15085 => 48,
      15086 => 48,
      15087 => 49,
      15088 => 49,
      15089 => 49,
      15090 => 50,
      15091 => 50,
      15092 => 15,
      15093 => 16,
      15094 => 16,

      15096 => 18,
      15097 => 15,
      15098 => 18,
      15099 => 44,
      15100 => 44,
      15101 => 44,
      15102 => 44,
      15103 => 44,
      15104 => 13,

      15106 => 45,
      15107 => 45,
      15108 => 45,
      15109 => 45,
      15110 => 45,
      15111 => 45,
      15112 => 46,
      15113 => 46,
      15114 => 46,
      15115 => 46,
      15116 => 46,
      15117 => 46,
      15118 => 46,
      15119 => 46,

      15121 => 47,

      15123 => 47,
      15124 => 4,
      15125 => 15,
      15126 => 9,
      15127 => 40,
      15128 => 40,
      15129 => 40,
      15130 => 41,
      15131 => 41,
      15132 => 41,
      15133 => 42,
      15134 => 42,
      15135 => 42,
      15136 => 42,
      15137 => 42,

      15139 => 43,
      15140 => 43,
      15141 => 43,
      15142 => 12,
      15143 => 43,
      15144 => 43,
      15145 => 43,
      15146 => 43,
      15147 => 43,
      15148 => 43,
      15149 => 43,
      15150 => 44,
      15151 => 44,
      15152 => 10,
      15153 => 6,
      15154 => 36,
      15155 => 36,
      15156 => 36,
      15157 => 6,
      15158 => 6,
      15159 => 36,
      15160 => 14,
      15161 => 6,
      15162 => 7,
      15163 => 37,
      15164 => 37,
      15165 => 37,
      15166 => 37,
      15167 => 37,
      15168 => 37,
      15169 => 38,
      15170 => 7,
      15171 => 38,
      15172 => 39,

      15174 => 39,
      15175 => 39,
      15176 => 39,
      15177 => 40,
      15178 => 40,
      15179 => 31,
      15180 => 32,

      15182 => 32,

      15184 => 32,
      15185 => 32,
      15186 => 32,

      15188 => 32,
      15189 => 33,
      15190 => 8,
      15191 => 33,
      15192 => 8,
      15193 => 33,
      15194 => 12,
      15195 => 34,
      15196 => 8,
      15197 => 34,
      15198 => 34,
      15199 => 8,
      15200 => 35,
      15201 => 35,
      15202 => 35,

      15204 => 35,

      15206 => 35,
      15207 => 35,
      15208 => 14,
      15209 => 10,

      15211 => 25,

      15214 => 8
    }
  end

  def druha_vlada_andreje_babise_get_promise_source_pages
    {
      17518 => 3,
      17565 => 4,
      17516 => 5,
      17517 => 5,
      17519 => 7,
      17520 => 8,
      17523 => 9,
      17521 => 10,
      17522 => 10,
      17525 => 12,
      17524 => 12,
      17526 => 13,
      17527 => 14,
      17529 => 14,
      17528 => 14,
      17530 => 16,
      17531 => 17,
      17532 => 17,
      17533 => 18,
      17852 => 18,
      17534 => 19,
      17535 => 20,
      17536 => 23,
      17537 => 23,
      17540 => 24,
      17538 => 24,
      17539 => 24,
      17563 => 25,
      17549 => 28,
      17541 => 29,
      17542 => 29,
      17543 => 30,
      17544 => 32,
      17545 => 33,
      17546 => 33,
      17561 => 33,
      17562 => 33,
      17548 => 34,
      17550 => 35,
      17547 => 35,
      17551 => 35,
      17552 => 36,
      17553 => 37,
      17554 => 37,
      17558 => 38,
      17555 => 38,
      17556 => 38,
      17557 => 39,
      17559 => 40,
      17560 => 40
    }
  end
end
