# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node
        environment:
          DB_HOST: localhost
          DB_USERNAME: circleci-demo-go
          RAILS_ENV: test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci-demo-go
          POSTGRES_DB: demagog_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: Yarn Install
          command: yarn install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run: bundle exec rake db:seed
      - run: bundle exec rails dbconsole <<< "CREATE EXTENSION unaccent;"

      # - run: RAILS_ENV=test bundle exec bin/rails webpacker:compile

      # Webpack setup
      - run: RAILS_ENV=test bundle exec bin/webpack

      # run rubocop
      - run:
          name: Run rubocop
          command: bundle exec rubocop

      # run eslint
      - run:
          name: Run eslint
          command: yarn lint

      - run:
          name: Run TypeScript compiler
          command: yarn run tsc --noEmit

      # run tests!
      - run:
          name: run tests
          command: |
            bundle exec rake test

      # run more tests!
      # TODO: uncomment when we have some JS tests
      # - run:
      #     name: run jest
      #     command: |
      #       yarn run jest

      # collect reports
      # - store_test_results:
      #     path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
